// clang-format off
// DO NOT EDIT: this file is auto-generated by generate-enum-strings.
// Run the target update-enum-strings if this file is out of sync.
#include "spoki/config.hpp"
#include "caf/string_view.hpp"

SPOKI_PUSH_DEPRECATED_WARNING

#include "spoki/net/protocol.hpp"

#include <string>

namespace spoki::net {

std::string to_string(protocol x) {
  switch(x) {
    default:
      return "???";
    case protocol::icmp:
      return "spoki::net::protocol::icmp";
    case protocol::tcp:
      return "spoki::net::protocol::tcp";
    case protocol::udp:
      return "spoki::net::protocol::udp";
    case protocol::other:
      return "spoki::net::protocol::other";
  };
}

bool from_string(caf::string_view in, protocol& out) {
  if (in == "spoki::net::protocol::icmp") {
    out = protocol::icmp;
    return true;
  } else if (in == "spoki::net::protocol::tcp") {
    out = protocol::tcp;
    return true;
  } else if (in == "spoki::net::protocol::udp") {
    out = protocol::udp;
    return true;
  } else if (in == "spoki::net::protocol::other") {
    out = protocol::other;
    return true;
  } else {
    return false;
  }
}

bool from_integer(std::underlying_type_t<protocol> in,
                  protocol& out) {
  auto result = static_cast<protocol>(in);
  switch(result) {
    default:
      return false;
    case protocol::icmp:
    case protocol::tcp:
    case protocol::udp:
    case protocol::other:
      out = result;
      return true;
  };
}

} // namespace spoki::net

SPOKI_POP_WARNINGS
